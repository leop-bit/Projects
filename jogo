import random

# Personagem: Classe Mãe
# Heroi: controlado pelo usuário
# Inimigo: Adversário do usuário

class Personagem:
    def __init__(self, nome, vida, nivel):
        self.__nome = nome
        self.__vida = vida
        self.__nivel = nivel

    def get_nome(self):
        return self.__nome
    
    def get_vida(self):
        return self.__vida
    
    def get_nivel(self):
        return self.__nivel
    
    def exibir_detalhes(self):
        return f"Nome: {self.get_nome()}\nVida: {self.get_vida()}\nNível: {self.get_nivel()}"
    
    def receber_ataque(self, dano):
        self.__vida -= dano
        if self.__vida < 0:
            self.__vida = 0

    def atacar(self, alvo):
        dano = random.randint(self.get_nivel() * 1, self.get_nivel() * 3)
        alvo.receber_ataque(dano)
        print(f"{self.get_nome()} atacou {alvo.get_nome()} e causou {dano} de dano!")

   
    
class Heroi(Personagem):
    def __init__(self, nome, vida, nivel, habilidade):
        super().__init__(nome, vida, nivel)
        self.__habilidade = habilidade
    
    def get_habilidade(self):
        return self.__habilidade
    
    def exibir_detalhes(self):
        return f"{super().exibir_detalhes()}\nHabilidade: {self.get_habilidade()}\n"
    
    def utilizar_habilidade(self, alvo):
        dano = random.randint(self.get_nivel() * 3, self.get_nivel() * 7) # Dano Aumentado
        alvo.receber_ataque(dano)
        print(f"{self.get_nome()} utilizou a {self.get_habilidade()} em {alvo.get_nome()} e causou {dano} de dano supermassivo!")
    

class Inimigo(Personagem):
    def __init__(self, nome, vida, nivel, tipo):
        super().__init__(nome, vida, nivel)
        self.__tipo = tipo
    
    def get_tipo(self):
        return self.__tipo
    
    def exibir_detalhes(self):
        return f"{super().exibir_detalhes()}\nTipo: {self.get_tipo()}"
    
class Jogo:
    """Classe Orquestradora do Jogo"""

    def __init__(self):
        self.heroi = Heroi(nome="Doom Slayer", vida= 100, nivel= 5, habilidade="Espada do Caos")
        self.inimigo = Inimigo(nome="Mephisto", vida=90, nivel=5, tipo="Infernal")

    def iniciar_batalha(self):
        """Fazer a Gestão da batalha em turnos"""
        print("Iniciando a batalha")
        while self.heroi.get_vida() > 0 and self.inimigo.get_vida() > 0:
            print("\nDetalhes dos Personagens")
            print(self.heroi.exibir_detalhes())
            print(self.inimigo.exibir_detalhes())

            input("\nPressione Enter para Atacar...")
            escolha = input("Escolha (1 - Ataque Normal, 2 - Utilizar Habilidade): ")

            if escolha == '1':
                self.heroi.atacar(self.inimigo)

            elif escolha == '2':
                self.heroi.utilizar_habilidade(self.inimigo)
            else:
                print("Escolha inválida")

            if self.inimigo.get_vida() > 0:
                # inimigo ataca o herói
                self.inimigo.atacar(self.heroi)

        if self.heroi.get_vida() >0:
                print(f"\nO {self.heroi.get_nome()} venceu a batalha e estremeceu o Caos")

        else:
            print("\n Mephisto venceu e o Caos o Absorveu")


# Criar instância do jogo e iniciar batalha:

jogo = Jogo()
jogo.iniciar_batalha()
